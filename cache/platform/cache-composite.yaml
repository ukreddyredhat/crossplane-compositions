apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: azure-rediscache-composition
  labels:
    crossplane.io/xrd: xcaches.runtime.cariad.net
    provider: azure
spec:
  compositeTypeRef:
    apiVersion: runtime.cariad.net/v1alpha1
    kind: XCache
  writeConnectionSecretsToNamespace: upbound-system
  resources:
  - name: redis
    base:
      apiVersion: cache.azure.jet.crossplane.io/v1alpha2
      kind: RedisCache
      metadata:
        name: redis-cache
      spec:
        forProvider:
          resourceGroupName: replaced-by-patches
          location: "West US"
          redisVersion: "4"
          capacity: 1
          family: "C"
          skuName: "Standard"
          minimumTlsVersion: "1.2"
          enableNonSslPort: false
          tags: # (Optional) A mapping of tags to assign to the resource.
            environment: dev # replaced-by-params
        writeConnectionSecretToRef:
          namespace: replaced-by-patches #replaed by patches
          name: replaced-by-patches #replaed by patches
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-redis-connection"
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
      policy:
        fromFieldPath: Required
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.resourceGroup
      toFieldPath: spec.forProvider.resourceGroupName
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.location
      toFieldPath: spec.forProvider.location
      transforms:
      - type: map
        map:
          us-west: West US
          us-east: East US
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.environment
      toFieldPath: spec.forProvider.skuName
      transforms:
      - type: map
        map:
          dev: Standard
          stage: Standard
          prod: Premium
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.environment
      toFieldPath: spec.forProvider.capacity
      transforms:
      - type: map
        map:
          dev: "1"
          stage: "2"
          prod: "3"
      - type: convert
        convert:
          toType: int
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.environment
      toFieldPath: spec.forProvider.family
      transforms:
      - type: map
        map:
          dev: C
          stage: C
          prod: P
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.environment
      toFieldPath: spec.forProvider.tags.environment
    connectionDetails:
    - name: host
      fromConnectionSecretKey: attribute.hostname
    - name: port
      fromConnectionSecretKey: attribute.ssl_port
    - name: primary_connection_string
      fromConnectionSecretKey: attribute.primary_connection_string
    - name: secondary_connection_string
      fromConnectionSecretKey: attribute.secondary_connection_string
    - name: primary_access_key
      fromConnectionSecretKey: attribute.primary_access_key
    - name: secondary_access_key
      fromConnectionSecretKey: attribute.secondary_access_key
